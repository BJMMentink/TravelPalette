<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Filter symbols using a dynamic expression</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <link href="https://api.mapbox.com/mapbox-gl-js/v3.3.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v3.3.0/mapbox-gl.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>
<body>
    <style>
        .filter-group {
            font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
            font-weight: 600;
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1;
            border-radius: 3px;
            width: 120px;
            color: #fff;
        }

            .filter-group input[type='checkbox']:first-child + label {
                border-radius: 3px 3px 0 0;
            }

            .filter-group label:last-child {
                border-radius: 0 0 3px 3px;
                border: none;
            }

            .filter-group input[type='checkbox'] {
                display: none;
            }

                .filter-group input[type='checkbox'] + label {
                    background-color: #3386c0;
                    display: block;
                    cursor: pointer;
                    padding: 10px;
                    border-bottom: 1px solid rgba(0, 0, 0, 0.25);
                }

                .filter-group input[type='checkbox'] + label {
                    background-color: #3386c0;
                    text-transform: capitalize;
                }

                    .filter-group input[type='checkbox'] + label:hover,
                    .filter-group input[type='checkbox']:checked + label {
                        background-color: #4ea0da;
                    }

                        .filter-group input[type='checkbox']:checked + label:before {
                            content: '✔';
                            margin-right: 5px;
                        }
    </style>
    <div id="map"></div>
    <nav id="filter-group" class="filter-group"></nav>

    <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoibGV1bWFzMTIzMSIsImEiOiJjbHNjbDBtenMwcjRwMmtxbG1lMWVvNWo0In0.oawYLGHq-hDv7aFDdWrbSw';
        // This GeoJSON contains features that include an "icon"
        // property. The value of the "icon" property corresponds
        // to an image in the Mapbox Light style's sprite. (Note:
        // the name of images is the value of the "icon" property
        // + "-15".)
        const places = {
            'type': 'FeatureCollection',
            'features': [
                {
                    'type': 'Feature',
                    'properties': {
                        'icon': 'theatre'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [-77.038659, 38.931567]
                    }
                },
                {
                    'type': 'Feature',
                    'properties': {
                        'icon': 'theatre'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [-77.003168, 38.894651]
                    }
                },
                {
                    'type': 'Feature',
                    'properties': {
                        'icon': 'bar'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [-77.090372, 38.881189]
                    }
                },
                {
                    'type': 'Feature',
                    'properties': {
                        'icon': 'bicycle'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [-77.052477, 38.943951]
                    }
                },
                {
                    'type': 'Feature',
                    'properties': {
                        'icon': 'music'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [-77.031706, 38.914581]
                    }
                },
                {
                    'type': 'Feature',
                    'properties': {
                        'icon': 'music'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [-77.020945, 38.878241]
                    }
                },
                {
                    'type': 'Feature',
                    'properties': {
                        'icon': 'music'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [-77.007481, 38.876516]
                    }
                }
            ]
        };

        const filterGroup = document.getElementById('filter-group');
        const map = new mapboxgl.Map({
            container: 'map',
            // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
            style: 'mapbox://styles/mapbox/light-v11',
            center: [-77.04, 38.907],
            zoom: 11.15
        });

        map.on('load', () => {
            // Add a GeoJSON source containing place coordinates and information.
            map.addSource('places', {
                'type': 'geojson',
                'data': places
            });

            // Add a symbol layer showing all features in the source
            map.addLayer({
                'id': 'symbol-places',
                'type': 'symbol',
                'source': 'places',
                'layout': {
                    // These icons are a part of the Mapbox Light style.
                    // To view all images available in a Mapbox style, open
                    // the style in Mapbox Studio and click the "Images" tab.
                    // To add a new image to the style at runtime see
                    // https://docs.mapbox.com/mapbox-gl-js/example/add-image/
                    'icon-image': ['get', 'icon'],
                    'icon-allow-overlap': true
                }
            });

            // this function will be called whenever a checkbox is toggled
            const updateLayerFilter = () => {
                // get an array of icon names that corresponds to the currently checked checkboxes
                const checkedSymbols = [...document.getElementsByTagName('input')]
                    .filter((el) => el.checked)
                    .map((el) => el.id);

                // use an 'in' expression to filter the layer
                map.setFilter('symbol-places', ['in', 'icon', ...checkedSymbols]);
            };

            // get an array of all unique `icon` properties
            const symbols = [];

            for (const feature of places.features) {
                const symbol = feature.properties.icon;
                if (!symbols.includes(symbol)) symbols.push(symbol);
            }

            // for each `icon` value, create a checkbox and label
            for (const symbol of symbols) {
                const input = document.createElement('input');
                input.type = 'checkbox';
                input.id = symbol;
                input.checked = true;
                filterGroup.appendChild(input);

                const label = document.createElement('label');
                label.setAttribute('for', symbol);
                label.textContent = symbol;
                filterGroup.appendChild(label);

                // When any checkbox changes, update the filter.
                input.addEventListener('change', updateLayerFilter);
            }
        });
    </script>

</body>
</html>